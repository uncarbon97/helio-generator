package ${package}.${moduleName}.entity;

import cc.uncarbon.framework.crud.entity.HelioBaseEntity;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableName;
import lombok.*;
import lombok.experimental.Accessors;
import lombok.experimental.SuperBuilder;
#if(${helioFrameworkVersion} == 'v2')
import io.swagger.v3.oas.annotations.media.Schema;
#end
#if(${helioFrameworkVersion} == 'v1')
import io.swagger.annotations.ApiModelProperty;
#end
#if(${helioFrameworkVersion} == 'v2')
import java.io.Serial;
#end
import java.time.LocalDate;
import java.time.LocalDateTime;
#if(${hasBigDecimal})
import java.math.BigDecimal;
#end
#if(${useYesOrNoEnum})
import cc.uncarbon.framework.core.enums.YesOrNoEnum;
#end
#if(${useEnabledStatusEnum})
import cc.uncarbon.framework.core.enums.EnabledStatusEnum;
#end


/**
 * ${comments}
 */
@EqualsAndHashCode(callSuper = true)
@Accessors(chain = true)
@SuperBuilder
@AllArgsConstructor
@NoArgsConstructor
@Data
@TableName(value = "${tableName}")
public class ${className}Entity extends HelioBaseEntity<Long> {

#if(${helioFrameworkVersion} == 'v2')
    @Serial
#end
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if($column.columnName != $pk.columnName
&& $column.columnName != "tenant_id"
&& $column.columnName != "revision"
&& $column.columnName != "del_flag"
&& $column.columnName != "created_at"
&& $column.columnName != "created_by"
&& $column.columnName != "updated_at"
&& $column.columnName != "updated_by"
)

#if(${helioFrameworkVersion} == 'v2')
    @Schema(description = "$column.comments")
#end
#if(${helioFrameworkVersion} == 'v1')
    @ApiModelProperty(value = "$column.comments")
#end
    @TableField(value = "$column.columnName")
    private $column.attrType $column.camelAttrName;
#end
#end

}
